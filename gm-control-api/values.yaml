# Default values for gm-control-api.
global:
  environment: kubernetes
  domain:
  route_url_name:
  remove_namespace_from_url: ''
  exhibitor:
    replicas: 1
  # XDS will be replaced with gm-control
  xds:
    port: 18000
    cluster: greymatter
  gmControlApi:
    version: latest

gmControlApi:
  name: gm-control-api
  displayName: gm-control-api
  replicas: 1
  image: 'docker.production.deciphernow.com/deciphernow/gm-control-api:{{ $.Values.global.gmControlApi.version }}'
  imagePullPolicy: Always # IfNotPresent
  initialConfigPath: 'config/backend.json'
  containerPort: 5555
  zone: default-zone
  proxyPort: 8080
  init:
    envvars:
      greymatter_console_level:
          value: 'debug'
          type: 'value'
      greymatter_api_host:
          value: '{{ .Values.gmControlApi.name }}:{{ .Values.gmControlApi.containerPort }}'
          type: 'value'
      greymatter_api_key:
          value: 'xxx'
          type: 'value'
      greymatter_api_ssl:
          value: 'false'
          type: 'value'
      basic_object_path:
          value: '/tmp/mesh/basic_objects'
          type: 'value'
    objects:
      # we generate all the objects for the services first
      servicesTemplate:
        #  each mesh object for a specific service will be mounted into a directory for that service
        - type: proxy
          filename: proxy.json
          values: 
            proxy_key: proxy-{{.serviceName}}
            zone_key: zone-{{.zone}}
            name: "{{.serviceName}}"
            domain_keys:
            - edge
            listener_keys:
            - listener-{{.serviceName}}
            listeners: []
            secret:
              secret_key: secret-{{.serviceName}}-secret
              secret_name: spiffe://deciphernow.com/{{.serviceName}}/mTLS
              secret_validation_name: spiffe://deciphernow.com
              subject_names: "{{ toJson .authorizedSvids }}"
              ecdh_curves:
              - X25519:P-256:P-521:P-384
              forward_client_cert_details: SANITIZE_SET
              set_current_client_cert_details:
                uri: true
      #  Then we generate the basics/overall objects for the edge, and then the routes to each service
      edge:
        edge:
          - domain, etc
        # Each mesh object for the routes of the specific service is mounted into a directory for that service
        servicesTemplate:
          - type: route
      extras: 
      # Then we generate any additional custom mesh objects

  envvars:
    gm_control_api_log_level:
      type: 'value'
      value: 'debug'
    gm_control_api_address:
      type: 'value'
      value: '0.0.0.0:5555'
    gm_control_api_org_key:
      type: 'value'
      value: 'deciphernow'
    gm_control_api_persister_type:
      type: 'value'
      value: 'null'
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
