apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.control.name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.control.replicas }}
  selector:
    matchLabels:
      {{ .Values.global.control.cluster_label }}: {{ .Values.control.name }}
      deployment: {{ .Values.control.name }}
  template:
    metadata:
      labels:
        {{ .Values.global.control.cluster_label }}: {{ .Values.control.name }}
        deployment: {{ .Values.control.name }}
        run: {{ .Values.control.name }}
        greymatter: fabric
    spec:
      # This service_account must have read access to both pods and endpoints, because gm-control uses the kubernetes API to do service discovery, and the waiter init container needs access to service endpoints to wait on control-api
      serviceAccountName: {{ .Values.control.service_account.name }}
      containers:
        - name: {{ .Values.control.name }}
          image: {{ tpl .Values.control.image $ }}
          imagePullPolicy: {{ .Values.control.image_pull_policy }}
          env:
            {{- include "envvars" (dict "envvar" .Values.control.envvars "top" $) | indent 10 }}
          ports:
            - name: grpc
              containerPort: {{ .Values.global.control.port }}
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: grpc
            initialDelaySeconds: 2
          resources:
{{ toYaml .Values.control.resources | indent 12 }}
        {{- if .Values.control.secret }}
          volumeMounts:
            - name: controlapi-certs
              mountPath: {{ .Values.control.secret.mount_point }}
        {{- end }}
        - name: sidecar
          image: '{{ tpl .Values.sidecar.image $ }}'
          imagePullPolicy: {{ .Values.sidecar.image_pull_policy }}
          {{- if .Values.sidecar.resources }}
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
          - name: proxy
            containerPort: {{ .Values.sidecar.port }}
          - name: metrics
            containerPort: {{ .Values.sidecar.metrics_port }}
          env:
          {{- include "sidecar.envvars" . | indent 12 }}
          {{- if .Values.global.spire.enabled }}
          - name: SPIRE_PATH
            value: {{ .Values.global.spire.path }}
          {{- end }}
          volumeMounts:
          {{- if .Values.global.spire.enabled }}
          {{- include "spire_volume_mount" . | indent 8 }}
          {{- else if .Values.sidecar.secret.enabled }}
          - name: sidecar-certs
            mountPath: {{ .Values.sidecar.secret.mount_point }}
            readOnly: true
          {{- end }}
        {{- if .Values.global.consul.enabled }}
        {{- $data := dict "Values" .Values "ServiceName" "dashboard" }}
        {{- include "consul.agent" $data | nindent 6 }}
        {{- end }}
      initContainers:
        - name: ensure-control-api
          image: {{ .Values.global.waiter.image }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: control-api
            - name: POST_DELAY
              value: '10'
      imagePullSecrets:
      - name: {{ .Values.global.image_pull_secret }}
      {{- if .Values.control.secret }}
      volumes:
        - name: controlapi-certs
          secret:
            {{- if .Values.global.global_certs.enabled }}
            secretName: global-certs
            {{- else }}
            secretName: {{ .Values.control.secret.secret_name }}
            {{- end }}
        {{- if .Values.sidecar.secret.enabled }}
        - name: sidecar-certs
          secret:
            secretName: {{ .Values.sidecar.secret.secret_name }}
        {{- end }}
      {{- end }}
