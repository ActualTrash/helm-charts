kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: catalog
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: catalog
      deployment: catalog
  replicas: 1
  template:
    metadata:
      labels:
        app: catalog
        deployment: catalog
    spec:
      initContainers:
        - name: ensure-gm-control
          image: deciphernow/k8s-waiter
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: control
            - name: POST_DELAY
              value: "10"
        - name: ensure-spire-server
          image: deciphernow/k8s-waiter
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: SERVICE
              value: spire-server
            - name: POST_DELAY
              value: "2"
      serviceAccountName: {{ .Values.global.spire.agent.serviceAccount.name }}
      containers:
        - name: spire-agent
          image: {{ .Values.global.spire.agent.image }}
          args: ["-config", "/run/spire/config/agent.conf"]
          volumeMounts:
            - name: spire-config
              mountPath: /run/spire/config
              readOnly: true
            - name: spire-agent-socket
              mountPath: /run/spire/sockets
              readOnly: false
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "/opt/spire/bin/spire-agent api fetch -socketPath /run/spire/sockets/agent.sock 2>&1 | grep -vqE 'connection refused|no such file or directory'"
            failureThreshold: 2
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 3
        - name: catalog
          image: {{ tpl .Values.catalog.image $ }}
          imagePullPolicy: {{ .Values.catalog.imagePullPolicy }}
          {{- if .Values.catalog.resources }}
          resources:
{{ toYaml .Values.catalog.resources | indent 12 }}
          {{- end }}
          env:
            - name: DATA_SOURCE
              value: {{ .Values.catalog.source | quote }}
            - name: DEBUG
              value: {{ .Values.catalog.debug | quote }}
            - name: PORT
              value: '9080'
            - name: CONTROL_SERVER_0_ADDRESS
              value: '{{ .Values.global.control.name }}.{{ .Release.Namespace }}.svc.cluster.local:{{ .Values.global.control.port }}'
            - name: 'CONTROL_SERVER_0_ZONE_NAME'
              value: 'default-zone'
            - name: 'CONTROL_SERVER_0_REQUEST_CLUSTER_NAME'
              value: 'edge'

            {{- range $index, $service := .Values.catalog.services }}
            - name: "{{ $index | upper }}_ZONE_NAME"
              value: "default-zone"
            - name: "{{ $index | upper }}_METRICS_PORT"
              value: "8081"
            - name: "{{ $index | upper }}_ENABLE_HISTORICAL_METRICS"
              value: "true"
            {{- range $key, $val := $service }}
            - name: "{{ $index | upper }}_{{ $key | upper}}"
              value: "{{ tpl $val $ }}"
            {{- end }}
            {{- end }}
            
        - name: sidecar
          image: {{ tpl $.Values.sidecar.image $ }}
          imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
          {{- if .Values.sidecar.resources }}
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
            - name: proxy
              containerPort: 8080
            - name: metrics
              containerPort: 8081
          env:
          {{- include "greymatter.envvars" . | indent 10 }}
          {{- if .Values.global.spire.enabled }}
          volumeMounts:
          {{- include "sidecar_volume_mounts" . | indent 10 }}
          {{- end }}
      {{- if .Values.global.spire.enabled }}
      volumes:
      {{- include "sidecar_volumes" . | indent 6 }}
      {{- end }}
      imagePullSecrets:
        - name: docker.secret
        - name: dev.docker.secret
