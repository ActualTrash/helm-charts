# Grey Matter Data Defaults

global:
  # Used as imagePullSecrets value for each subchart
  image_pull_secret: docker.secret
  # Deployment environment, one of "eks", "kuberenetes", or "openshift"
  environment: openshift
  exhibitor:
    replicas: 1
  control:
    # Port for Grey Matter Control. Used in sidecar envvars
    port: 50000
    # The label Control uses to find pods to include in the mesh
    cluster_label: greymatter.io/control
  # Zone for Grey Matter objects. Used in sidecar envvars
  zone: zone-default-zone
  # Whether or not to use spire for cert management and the trust domain
  spire:
    enabled: false
    trust_domain: quickstart.greymatter.io
    path: '/run/spire/socket/agent.sock'
  # Whether to register services with Consul and where to find the Consul server
  consul:
    enabled: false
    host: ''
    port: 8500

  # Configures the init container used to wait on various deployments to be ready
  waiter:
    image: deciphernow/k8s-waiter:latest
    service_account:
      create: true
      name: waiter-sa
  sidecar:
    version: 1.4.1

data:
  # Name used for the deployment and service resources
  name: data
  version: latest
  replicas: 1
  # If set, enables tls using the secret specified in secret_name
  secret:
    enabled: true
    secret_name: data-secrets

  image: docker-dev.production.deciphernow.com/deciphernow/gm-data:{{ $.Values.data.version }}
  image_pull_secret: '{{ .Values.global.image_pull_secret }}'
  image_pull_policy: IfNotPresent
  

  master_key: ac8923[lkn43589vi23kl4rfgv0ws
  # Location and (optionally) size of pvc to persist data if not using s3 
  pvc:
    mount_point: /app/buckets/{{ $.Values.data.aws.bucket}}/{{ $.Values.data.envvars.aws_s3_partition.value }}
    #size:
  # Security context for the statefulset if enabled
  security_context:
    enabled: false
    run_as_user: 666
    run_as_group: 666
    fs_group: 666

  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi
  envvars:
    uses3:
      type: value
      value: 'true'
    aws_access_key_id:
      type: secret
      secret: '{{ $.Values.data.secret.secret_name | lower }}'
      key: aws_access_key_id
    aws_secret_access_key:
      type: secret
      secret: '{{ $.Values.data.secret.secret_name | lower }}'
      key: aws_secret_access_key
    aws_region:
      type: secret
      secret: '{{ $.Values.data.secret.secret_name | lower }}'
      key: aws_region
    aws_s3_bucket:
      type: secret
      secret: '{{ $.Values.data.secret.secret_name | lower }}'
      key: aws_s3_bucket
    aws_s3_partition:
      type: value
      value: data
    gmdata_namespace:
      type: value
      value: home
    gmdata_namespace_userfield:
      type: value
      value: email
    jwt_pub:
      type: secret
      secret: jwt-security
      key: jwt.pub
    jwt_api_key:
      type: secret
      secret: jwt-security
      key: jwt.api_key
    less_chatty_info:
      type: value
      value: 'false'
    masterkey:
      type: secret
      secret: '{{ .Values.data.secret.secret_name }}'
      key: master_key
    mongodb:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: database
    gmdata_use_tls:
      type: value
      value: 'true'
    gmdata_cert:
      type: secret
      secret: jwt-certs
      key: server.cert.pem
    gmdata_key:
      type: secret
      secret: jwt-certs
      key: server.key.pem
    gmdata_trust:
      type: secret
      secret: jwt-certs
      key: server.trust.pem
    client_prefix:
      type: value
      value: /services/{{ $.Values.data.name | lower }}/{{ $.Values.data.version }}
    client_jwt_prefix:
      type: value
      value: '/jwt'
    client_jwt_endpoint_address:
      type: value
      value: localhost
    # Use data's egress listener port
    client_jwt_endpoint_port:
      type: value
      value: '{{- if .Values.global.spire.enabled }}10909{{- else}}10808{{- end }}'
    client_jwt_endpoint_prefix:
      type: value
      value: '/jwt'
    client_jwt_endpoint_use_tls:
      type: value
      value: 'true'
    client_jwt_endpoint_cert:
      type: secret
      secret: jwt-certs
      key: jwt.cert.pem
    client_jwt_endpoint_key:
      type: secret
      secret: jwt-certs
      key: jwt.key.pem
    client_jwt_endpoint_trust:
      type: secret
      secret: jwt-certs
      key: jwt.trust.pem
    mongohost:
      type: value
      value: '{{- if .Values.mongo.remote.enabled }}{{ .Values.mongo.remote.endpoint }}{{else}}{{ template "greymatter.mongo.address" . }}{{ end}}'

  aws:
    access_key: xxx
    secret_key: xxx
    region: us-east-1
    bucket: decipher-quickstart-helm

mongo:
  # 
  remote:
    enabled: false
    endpoint: ""

  # Name used for the mongo deployment and service resources
  name: data-mongo
  replicas: 1
  image: 'deciphernow/mongo:4.0.3'
  image_pull_policy: IfNotPresent
  # If defined, sets the size and storageClass name for the Mongo data persistent volume storage class
  storage:
    # Where your mongo image will place its data
    mount_path: /data/db
    # Size, in Gi, that the Mongo PVC should be
    size: 40
    ## Mongo data Persistent Volume Storage Class
    ## If defined, StorageClassName: <storage_class>
    ## If set to "-", StorageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    #storage_class: "-"
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi

  envvars:
    mongo_initdb_database:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: database
    mongodb_admin_password:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: gmdata_password
    mongodb_database:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: database
    mongodb_user:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: root_username
    mongodb_password:
      type: secret
      secret: '{{ $.Values.mongo.credentials.secret_name }}'
      key: root_password
    mongo_cn:
      type: value
      value: 'localhost'
    # If true, .Values.mongo.secret must be specified (see below), and mongo_key, mongo_trust, and mongo_cert must be specified as below
    mongo_use_tls:
      type: value
      value: 'false'
    #mongo_cert:
    #  type: secret
    #  secret: {{ .Values.mongo.secret.secret_name }}
    #  key: {{ .Values.mongo.secret.secret_keys.cert }}
    #mongo_key:
    #  type: secret
    #  secret: {{ .Values.mongo.secret.secret_name }}
    #  key: {{ .Values.mongo.secret.secret_keys.key }}
    #mongo_trust:
    #  type: secret
    #  secret: {{ .Values.mongo.secret.secret_name }}
    #  key: {{ .Values.mongo.secret.secret_keys.ca }}
 
  # The credentials for setting up a mongo user and database for data to connect with
  credentials:
    secret_name: 'mongo-password'
    root_username: 'mongo'
    root_password: 'mongo'
    database: 'gmdata'
    admin_password: 'mongopassword'
    gmdata_username: 'gmdata-user'
    gmdata_password: 'mongopassword'

  # If set, enables tls and configures environment using the secret specified in secret_name
  #secret:
    #secret_name: mongo-certs
    #mount_point: /secret/cert
    #secret_keys:
    #  ca: ca_b64
    #  cert: cert_b64
    #  key: key_b64

sidecar:
  version: '{{ .Values.global.sidecar.version | default "latest" }}'
  # Port where the proxy will listen
  port: 10808
  # Port where the proxy will expose metrics
  metrics_port: 8081
  # If set, enables tls using the secret specified in secret_name
  secret:
    enabled: true
    secret_name: sidecar-certs
    mount_point: /etc/proxy/tls/sidecar/
    secret_keys:
      ca: ca.crt
      key: server.key
      cert: server.crt
  image: 'docker-dev.production.deciphernow.com/deciphernow/gm-proxy:{{ tpl $.Values.sidecar.version $ }}'
  image_pull_policy: IfNotPresent
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 128Mi


secrets:
  data:
    name: data
    deploy:
      standalone: false
    aws:
      access_key: ""
      secret_key: ""
      region: us-east-1
      bucket: decipher-quickstart-helm
    master_key: ac8923[lkn43589vi23kl4rfgv0ws

  mongo:
    secret_name: "mongo-certs"
      # If from_file is true then you need to place cert files into the direcroty specified in path
      # Looking for ca.crt, server.cert, and server.key
    certificates:
      from_file:
        enabled: false
        path: files/certs/mongo
      ca: |-
        -----BEGIN CERTIFICATE-----
        MIIGcTCCBFmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgc0xCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTETMBEGA1UEBwwKQWxleGFuZHJpYTEkMCIGA1UE
        CgwbRGVjaXBoZXIgVGVjaG5vbG9neSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVl
        cmluZzEuMCwGA1UEAwwlRGVjaXBoZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChS
        b290KTEqMCgGCSqGSIb3DQEJARYbZW5naW5lZXJpbmdAZGVjaXBoZXJub3cuY29t
        MB4XDTE3MDgwOTExMjMwOFoXDTI3MDgwNzExMjMwOFowgcAxCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTEkMCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9n
        eSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVlcmluZzE2MDQGA1UEAwwtRGVjaXBo
        ZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChJbnRlcm1lZGlhdGUpMSowKAYJKoZI
        hvcNAQkBFhtlbmdpbmVlcmluZ0BkZWNpcGhlcm5vdy5jb20wggIiMA0GCSqGSIb3
        DQEBAQUAA4ICDwAwggIKAoICAQDPkxaiUD3uqR2AA5jwAb9gCjD+BrOrYBoelnR6
        u29FPT5cHeM8bfVo6zixy7qC2lXzhK5gH/TLWXelpEwU+sw81oUbzZlB7Z2lvpj8
        t4zXg4zgHNPqAFJM6L9b70dLgukhcUO6nnIiPPAprmtBDvXbtBwDCzOPaMcBeEwi
        zERa4WyXYjn5Q+a8LTTLQ/OFmLHFA2dCG78s6cYQOfF92L641QdOhqXPtq+QwqAm
        WkQ53Pes6rHmjT0kC8hEI5fCKEA3QXYt6YtgX+KIHgOYWI0g22wh95ohk+DuRL/O
        3zzJ9tCjrMPO2lxmg0GdpuqjfR6K8CEk4Yq2dUwYC7dffgCrWv9zik/pXeoSvTv3
        XprMN2WWKBX9lVC2qKFhNX4driBFRO0i5+bGdM1e8NilUDqHiikwhaVx2znb/E/b
        LCCwlhC0oAAxnVZ1J18k46STe7hlg/RqM/18uxmhP9an2FkDtuyZBugbpWpgk7lE
        tpOd92iCGYDc6k8Jsn+p0UiZjioJv/Gm04T3t90dkVu7D+mwFIsEAaJjwepEZ7ki
        IBayWrJml+DT4ghyadkms8UaOa+YOYEZiY5GzJhEodAt01OanSkzR/FYjM4SuGXw
        Rrq2p8hTuUBBm1p9ipv8DLqPmlXZ2Cn7ByTX7TMsG+77R4zkka5XD5tULpAf5xKo
        qx4N/QIDAQABo2YwZDAdBgNVHQ4EFgQUbA2I9pZUJ7Z6WxXfTRecoCsqfnUwHwYD
        VR0jBBgwFoAUY5U4Jb8hC6Ssinh2LzCB3tly8bcwEgYDVR0TAQH/BAgwBgEB/wIB
        ADAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAHMtenslnEuvnT4g
        JWR70FZv3wUOOqAsyxJdWj4o8yM7/V3wGKMxkRv7Oqetp92XYauffSPxE3INnGMq
        DdRMTf2MGVnv/W5PJouZwMhBX4W6rjvl4QCSl+Q+wSt+OibNu2AxdCeQKa67cwvf
        QfD4ufeWfvUPzazwzuJqE5WCjNnM2KsWbmzclquAbUjKH0017UGRYe8THrCZ5Mdn
        L9X+ZSe5wWHWIm7JLn5nexeW668hgcdINrKBRg7ygKWrO/aMFnl3cQXmbNtXBt+y
        E5tof618/HWJBjC3e+eyIMqjgjEZmxYfxwBTk0XVEZuA3PyAGigA17Q0ev5Zx4ii
        2fGIYN5y3L6OMrfkcmdtihoQisqd+zKlgxWH4Z2KtV0RFVTreooNaSpFZu6EeCPH
        0fg++TV/uGOEfNc4seEfFiaM4uq8mp5E1PYOXX4DLkzignqql9h8u3/3ZC7m4NoY
        qpoOurQyY/dCUIJw3Kb+Dlck1OZsGQNvkpflHvCxCvTq48bEgjO+xkoYBODhY0wT
        grl1kFBXMNNAiFiHlHaM6h+MKv/9cRi63KXmhiEjUWUVcdT9ZRRPJ6qd5QAJHJ+h
        NU7s17ar5/4SgJx9BZSEYzQQCzt4REwBxfrF/GdGNia1wZcqMNylmkD8fCWBZiW2
        sarsDzVzwvduL1ODIycXxe/pZUxi
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIGgjCCBGqgAwIBAgIJAKBdlRUnXXIJMA0GCSqGSIb3DQEBCwUAMIHNMQswCQYD
        VQQGEwJVUzERMA8GA1UECAwIVmlyZ2luaWExEzARBgNVBAcMCkFsZXhhbmRyaWEx
        JDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kgU3R1ZGlvczEUMBIGA1UECwwL
        RW5naW5lZXJpbmcxLjAsBgNVBAMMJURlY2lwaGVyIENlcnRpZmljYXRlIEF1dGhv
        cml0eSAoUm9vdCkxKjAoBgkqhkiG9w0BCQEWG2VuZ2luZWVyaW5nQGRlY2lwaGVy
        bm93LmNvbTAeFw0xNzA4MDkxMTIyMTlaFw0yNzA4MDcxMTIyMTlaMIHNMQswCQYD
        VQQGEwJVUzERMA8GA1UECAwIVmlyZ2luaWExEzARBgNVBAcMCkFsZXhhbmRyaWEx
        JDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kgU3R1ZGlvczEUMBIGA1UECwwL
        RW5naW5lZXJpbmcxLjAsBgNVBAMMJURlY2lwaGVyIENlcnRpZmljYXRlIEF1dGhv
        cml0eSAoUm9vdCkxKjAoBgkqhkiG9w0BCQEWG2VuZ2luZWVyaW5nQGRlY2lwaGVy
        bm93LmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALDo08zRbssi
        vrgIyCiE3x5ttHDcEsOs3EaZaE3hHpXK5an5iXT8/tl35BDAWl1J6CJkm4ip0Ch5
        jOqrk5peQJKuN731GlafzoabwHcqyD6CvJZANre64s0J2CTZpob2gWM06C75uwzK
        5W4JfivSzBpHu8A+FJARmZpnQoFDRIPWQFk9q22CPIWtlUdrkwVdnHlV++hRKKBU
        qwAyXj6UUnrvwWNER0C0wksoJf+5oP/HLyqzUcd6yPmOiAe8QhR8jLdt/K8e14GI
        7XhAytKxI2qHqzUmi2T57lIzz83fG4Cmo59mIF4jLvHfjC48zz9dCoObCK/QcczX
        lipxmTm9HocDWCCo0L035arvWxRkP8ec75CE20Q8RqUY9jQo4a64RydbAabCw8s0
        b0mSoHbRvpZCx96KhCG7EkjCorWrvh9dxZAenIZDAbn3sX9QGc6A+B5MYbv70UKo
        8RD2IODsvuCSnn1rEQpGb0d6hNSReDN2cYLnSeuoMUlxT/SRCNBizGOWxJuFL1Cr
        5YnNyUv3tCEXKxEM9OoRHutydmeg8fTbTu8hAlGiYhgqehmkApS25qCl4sVz3FUj
        /y2yfQbecliu/YdPVziRGsLOTGhQldBSIaVdMGA/muzxVtOJdLBuK/qK/gvW7N2s
        vZQTHZz+B10Dlxs9S2Nhf7FX7pMLM9hXAgMBAAGjYzBhMB0GA1UdDgQWBBRjlTgl
        vyELpKyKeHYvMIHe2XLxtzAfBgNVHSMEGDAWgBRjlTglvyELpKyKeHYvMIHe2XLx
        tzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsF
        AAOCAgEAcB4z4ALRX+s1Fb1j2sWLo65jIyxm0OB2RTlhstd4+zd+zFjLg7XE0O5j
        Ilm3basVlLM2mTmi5CC4mvOBibSb6NlJr34GmKbfwYVLj3tpnlnA/HGGzHY3uoX6
        zBUSIYRH10k2bmpM438fXtz9P+kHAkmsVj2Yk8uLg+tZDZEdM8qiWbaIZa+awHwL
        DBhd1dQ7ZyejVJLKGyYwd7dMYLq04F4AqawPp2ksmcUtktU2Q+uGmJBkqgBzUTC+
        64yPKBbPa2WFFDVtqt0r6qD2N7FD6v0b0PiBeruvhpSva1yvE0vMNfa9kc8ExrKz
        7GMMGsv3TIOqK0tYXJayoM+8VAELwBcFvkCkobs4TtkF3VoPiO91hlm7K+7woNQH
        OVhxqDqH3ECA7vNLeA09xT7EApXzPGwk163O4qoZdT7VUI2Fu9G0+IzzS42TVXOm
        MUp1sEidUUElwuuqDvKxsBP6do9xT8dHg2n9Y04ME2FyQ1omuLzRrcyjU6Qo6PLr
        H/di6KT3iiZ/leFkDMf5/Pesy7bExPZN2sHR3SpR5RwQh50T4KZx7FOqvCJpi6Pp
        H1cz0921qGtG0iheOzWfonmvYKnhxcTTpg+fuiVdPWwdutjVl+HPc2yjw1Gdqw4h
        n4oFjG4KQO6zvZzGDFay9HazZyUKpgamy24u8XY7/BSWc1c95Gg=
        -----END CERTIFICATE-----
      cert: |-
        -----BEGIN CERTIFICATE-----
        MIIGgDCCBGigAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgcAxCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTEkMCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9n
        eSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVlcmluZzE2MDQGA1UEAwwtRGVjaXBo
        ZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChJbnRlcm1lZGlhdGUpMSowKAYJKoZI
        hvcNAQkBFhtlbmdpbmVlcmluZ0BkZWNpcGhlcm5vdy5jb20wHhcNMjAwMzE3MTgz
        NjMwWhcNMzAwMzE1MTgzNjMwWjCBhjETMBEGA1UEAwwKZ3JleW1hdHRlcjEUMBIG
        A1UECwwLRW5naW5lZXJpbmcxJDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kg
        U3R1ZGlvczETMBEGA1UEBwwKQWxleGFuZHJpYTERMA8GA1UECAwIVmlyZ2luaWEx
        CzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+fFs
        KRyrVzkbDxLXcNJA/3B64VmQO+13XAQuXcFB4NgBvovzQb6jXo2i122UQQzhKiAk
        vTEpqciHhgH7P5IpUmYJESCMB569rybGV1hnpbeWT+XWnxm7ooUltvF+kDbKZ3d4
        Ig6L04u1uoLbAxNp4mx+0k1uz+Xyu2mBEIijBBX0/d93ESe4gwAqXsmQv8X0HaPp
        gNSoVcYaMLymUwpxwRCBP700U80Po+//UvEJEbwIQCONXSCRkszHPH4cFyHAtpAO
        XYYYdY8vtbVQcFWCeqvffu/vITvnsiv4e990zignIQAkaSPvveSykqnNtlljo8Lo
        geld2gcTWKqWf1EvgQIDAQABo4IBujCCAbYwCQYDVR0TBAIwADARBglghkgBhvhC
        AQEEBAMCBsAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIFNlcnZl
        ciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUsT+P7GOf2MqtL+pHOl3Q9C2fLH0wgfsG
        A1UdIwSB8zCB8IAUbA2I9pZUJ7Z6WxXfTRecoCsqfnWhgdOkgdAwgc0xCzAJBgNV
        BAYTAlVTMREwDwYDVQQIDAhWaXJnaW5pYTETMBEGA1UEBwwKQWxleGFuZHJpYTEk
        MCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9neSBTdHVkaW9zMRQwEgYDVQQLDAtF
        bmdpbmVlcmluZzEuMCwGA1UEAwwlRGVjaXBoZXIgQ2VydGlmaWNhdGUgQXV0aG9y
        aXR5IChSb290KTEqMCgGCSqGSIb3DQEJARYbZW5naW5lZXJpbmdAZGVjaXBoZXJu
        b3cuY29tggIQADAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIG
        CCsGAQUFBwMBMBUGA1UdEQQOMAyCCmdyZXltYXR0ZXIwDQYJKoZIhvcNAQELBQAD
        ggIBACfLGfpi9hIQA+xN4D7AheoIyWTKZS16KrprDO4YPzhhE9a2WZGxJupgVZpa
        Z2sJukp6pnaXdf6Bo7rDcUq+rrx8gGhJ0TUr6Wl0ZdmvCrk1tQnhVkCcpPgxRJOP
        RzMt4OOxebthjsUEuXSNCsX3mvywt8fGbTrdRnncTufIRy3ZNFO6kS9gsvwfgBU5
        UUwJkBfOz2PB15TOYf2U+W9GmdBZAV5BnNEQn1xA7m6YEydRz4RU+AIlpP3dkaHi
        8RvyZon92Ux1RNlNXJCbGjlccjAN0TWrzi0e3s+ke2b897b6wQypb9WOrrEj1Nft
        aYY3Bwf6Zfz7Jk3UVC62uYxydBj6xGIv7+pbfW93i0GUqf8rHW6qiASbIiWS+/a/
        EUl+HXBRq5RgUDId3ipUYQG0mXJozGkzcP8r/xpEzWeVquyUqEtFzEybsTmrWjro
        dDzk4q2+QbR3Pndy7Ji6ysCypKS9jwM/A8BBQTuucLRBrFmvIpTKEGkGTtIFngwk
        /AgGL8SDkhd2owHCX7LyISlYr2f3E4XjVrtWdjIuHTvJzexrvwz2L+mb431N7rO2
        DMBLA8MXztlGS5JYhCIKaziu15r4CxtYegxQ6hhEaVP0/W9fsUvo3IOukOhWC1KO
        2n+U1NLp24Dm3fP4KGgHNtZCvfnA7w43aOaHPMCHBhJ7ESoC
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEA+fFsKRyrVzkbDxLXcNJA/3B64VmQO+13XAQuXcFB4NgBvovz
        Qb6jXo2i122UQQzhKiAkvTEpqciHhgH7P5IpUmYJESCMB569rybGV1hnpbeWT+XW
        nxm7ooUltvF+kDbKZ3d4Ig6L04u1uoLbAxNp4mx+0k1uz+Xyu2mBEIijBBX0/d93
        ESe4gwAqXsmQv8X0HaPpgNSoVcYaMLymUwpxwRCBP700U80Po+//UvEJEbwIQCON
        XSCRkszHPH4cFyHAtpAOXYYYdY8vtbVQcFWCeqvffu/vITvnsiv4e990zignIQAk
        aSPvveSykqnNtlljo8Logeld2gcTWKqWf1EvgQIDAQABAoIBAEXw08ZxWlTvCu5d
        5GGSxFN2gzw6Fs1eNu9N0De2E5w6dcp/WRPFp+uWkMHdzQWi+AMUuZMjhbgYACx0
        s3znhp6jJNhhFi4vsn6nyAq7F03dILe85iDhT4s73QDjdPogCuWHHdvR3DjXOIQ3
        h9fFf/S3TYnF10Nf4lulO1OIGK3UdYVo/Qorm165P5mhCJ8B+lVPkW50CFrGK3X0
        MhbYDeh3g1dwM95gxt7LrnLKb662ygBROXGEAE0ISHCApvw/lAhwe/w61BBdjIja
        Rz8Dm92aRBeAIvVNGkVfGdQLrX7Fs0AyFGP19QDa1B1bkj/fKQ/+mOfqrzD89QkF
        oq6z0ZECgYEA/6TbO/S2pOIEeWOD+ihO4TtFShpUwKLcS7NRmwDBEnqtZHEgrHJL
        YZ92+PNpHVJnP1OXRlxLeciM4LnUzYC67u0M3eW0pcg/ayln+NaRLzh8rs/vM8Yx
        loNeZS+H6sqGVSXnvc8BRm89TZrRi7AiEf/QIY7XHILjtRwERL6HyQUCgYEA+kqI
        mdKoXKxhGe3ujGMGivx5lOqo9k2TRP0mlkzFSuMWsBtEuO0DlOyxPFVUCpv+Wkt/
        AWC2d/9JcShJlMMs3tMt1gslvoPp5N9K+0++HXFA2lzHfgMjOf1hwDQLsMlyaf/S
        qnGe3zTxcvPpoPgq04QKxkzZdAgALSRrwAp8JU0CgYApFjDaGQGFzIGVlOXwPaw3
        zNPdDhBTCZnIXOCfveZJ9weJHhl3PcNZxExVxKE/QjAv4Fpux4Sl5RKnR5apFKh2
        oAiyXSnEf0OaEISSXMHmyfhYDDlQo+jyXNi+AH6iwLwIUVhGjE+TJ2u93kURY1SG
        egvUaOWvwmWghQk2lzyxlQKBgQC9DGEDNq8+WGF7cVDWLtG5VxwKU/hNGakb2c40
        hkYa202+tMoCl9s1uFXiiVzSKqNC1nVWuBL6rhNt6g0x1P3mTEH5wy++J+sZmWMM
        UV365RkkFiIEVyBbY7xarbUK0g2ebMFVRj7GvzmEJyGXGPtYCgsNXux8jLJ9Zl4Q
        jprYnQKBgQDN0gv6V37bwoX0GiQ/96qWxcBJEiCsxc9EYP8x9LOnIeZRDTozgjN0
        RK74+3zLN5+74qQQYfRZDKkTIWD3iD1o0LAn3+GrXgK3srQ8c16uTmxmwAUPS8lO
        /nhq1n+k2gddG2EMuDSfzFDG99vgJ84Ll6GaQmQDENZbWsGq9oGqkg==
        -----END RSA PRIVATE KEY-----

  sidecar:
    certificates:
      name: sidecar-certs
      # If from_file is true then you need to place cert files into the direcroty specified in path
      # Looking for ca.crt, server.cert, and server.key
      from_file:
        enabled: false
        path: files/certs/sidecar
      ca: |-
        -----BEGIN CERTIFICATE-----
        MIIGcTCCBFmgAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgc0xCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTETMBEGA1UEBwwKQWxleGFuZHJpYTEkMCIGA1UE
        CgwbRGVjaXBoZXIgVGVjaG5vbG9neSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVl
        cmluZzEuMCwGA1UEAwwlRGVjaXBoZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChS
        b290KTEqMCgGCSqGSIb3DQEJARYbZW5naW5lZXJpbmdAZGVjaXBoZXJub3cuY29t
        MB4XDTE3MDgwOTExMjMwOFoXDTI3MDgwNzExMjMwOFowgcAxCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTEkMCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9n
        eSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVlcmluZzE2MDQGA1UEAwwtRGVjaXBo
        ZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChJbnRlcm1lZGlhdGUpMSowKAYJKoZI
        hvcNAQkBFhtlbmdpbmVlcmluZ0BkZWNpcGhlcm5vdy5jb20wggIiMA0GCSqGSIb3
        DQEBAQUAA4ICDwAwggIKAoICAQDPkxaiUD3uqR2AA5jwAb9gCjD+BrOrYBoelnR6
        u29FPT5cHeM8bfVo6zixy7qC2lXzhK5gH/TLWXelpEwU+sw81oUbzZlB7Z2lvpj8
        t4zXg4zgHNPqAFJM6L9b70dLgukhcUO6nnIiPPAprmtBDvXbtBwDCzOPaMcBeEwi
        zERa4WyXYjn5Q+a8LTTLQ/OFmLHFA2dCG78s6cYQOfF92L641QdOhqXPtq+QwqAm
        WkQ53Pes6rHmjT0kC8hEI5fCKEA3QXYt6YtgX+KIHgOYWI0g22wh95ohk+DuRL/O
        3zzJ9tCjrMPO2lxmg0GdpuqjfR6K8CEk4Yq2dUwYC7dffgCrWv9zik/pXeoSvTv3
        XprMN2WWKBX9lVC2qKFhNX4driBFRO0i5+bGdM1e8NilUDqHiikwhaVx2znb/E/b
        LCCwlhC0oAAxnVZ1J18k46STe7hlg/RqM/18uxmhP9an2FkDtuyZBugbpWpgk7lE
        tpOd92iCGYDc6k8Jsn+p0UiZjioJv/Gm04T3t90dkVu7D+mwFIsEAaJjwepEZ7ki
        IBayWrJml+DT4ghyadkms8UaOa+YOYEZiY5GzJhEodAt01OanSkzR/FYjM4SuGXw
        Rrq2p8hTuUBBm1p9ipv8DLqPmlXZ2Cn7ByTX7TMsG+77R4zkka5XD5tULpAf5xKo
        qx4N/QIDAQABo2YwZDAdBgNVHQ4EFgQUbA2I9pZUJ7Z6WxXfTRecoCsqfnUwHwYD
        VR0jBBgwFoAUY5U4Jb8hC6Ssinh2LzCB3tly8bcwEgYDVR0TAQH/BAgwBgEB/wIB
        ADAOBgNVHQ8BAf8EBAMCAYYwDQYJKoZIhvcNAQELBQADggIBAHMtenslnEuvnT4g
        JWR70FZv3wUOOqAsyxJdWj4o8yM7/V3wGKMxkRv7Oqetp92XYauffSPxE3INnGMq
        DdRMTf2MGVnv/W5PJouZwMhBX4W6rjvl4QCSl+Q+wSt+OibNu2AxdCeQKa67cwvf
        QfD4ufeWfvUPzazwzuJqE5WCjNnM2KsWbmzclquAbUjKH0017UGRYe8THrCZ5Mdn
        L9X+ZSe5wWHWIm7JLn5nexeW668hgcdINrKBRg7ygKWrO/aMFnl3cQXmbNtXBt+y
        E5tof618/HWJBjC3e+eyIMqjgjEZmxYfxwBTk0XVEZuA3PyAGigA17Q0ev5Zx4ii
        2fGIYN5y3L6OMrfkcmdtihoQisqd+zKlgxWH4Z2KtV0RFVTreooNaSpFZu6EeCPH
        0fg++TV/uGOEfNc4seEfFiaM4uq8mp5E1PYOXX4DLkzignqql9h8u3/3ZC7m4NoY
        qpoOurQyY/dCUIJw3Kb+Dlck1OZsGQNvkpflHvCxCvTq48bEgjO+xkoYBODhY0wT
        grl1kFBXMNNAiFiHlHaM6h+MKv/9cRi63KXmhiEjUWUVcdT9ZRRPJ6qd5QAJHJ+h
        NU7s17ar5/4SgJx9BZSEYzQQCzt4REwBxfrF/GdGNia1wZcqMNylmkD8fCWBZiW2
        sarsDzVzwvduL1ODIycXxe/pZUxi
        -----END CERTIFICATE-----
        -----BEGIN CERTIFICATE-----
        MIIGgjCCBGqgAwIBAgIJAKBdlRUnXXIJMA0GCSqGSIb3DQEBCwUAMIHNMQswCQYD
        VQQGEwJVUzERMA8GA1UECAwIVmlyZ2luaWExEzARBgNVBAcMCkFsZXhhbmRyaWEx
        JDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kgU3R1ZGlvczEUMBIGA1UECwwL
        RW5naW5lZXJpbmcxLjAsBgNVBAMMJURlY2lwaGVyIENlcnRpZmljYXRlIEF1dGhv
        cml0eSAoUm9vdCkxKjAoBgkqhkiG9w0BCQEWG2VuZ2luZWVyaW5nQGRlY2lwaGVy
        bm93LmNvbTAeFw0xNzA4MDkxMTIyMTlaFw0yNzA4MDcxMTIyMTlaMIHNMQswCQYD
        VQQGEwJVUzERMA8GA1UECAwIVmlyZ2luaWExEzARBgNVBAcMCkFsZXhhbmRyaWEx
        JDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kgU3R1ZGlvczEUMBIGA1UECwwL
        RW5naW5lZXJpbmcxLjAsBgNVBAMMJURlY2lwaGVyIENlcnRpZmljYXRlIEF1dGhv
        cml0eSAoUm9vdCkxKjAoBgkqhkiG9w0BCQEWG2VuZ2luZWVyaW5nQGRlY2lwaGVy
        bm93LmNvbTCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBALDo08zRbssi
        vrgIyCiE3x5ttHDcEsOs3EaZaE3hHpXK5an5iXT8/tl35BDAWl1J6CJkm4ip0Ch5
        jOqrk5peQJKuN731GlafzoabwHcqyD6CvJZANre64s0J2CTZpob2gWM06C75uwzK
        5W4JfivSzBpHu8A+FJARmZpnQoFDRIPWQFk9q22CPIWtlUdrkwVdnHlV++hRKKBU
        qwAyXj6UUnrvwWNER0C0wksoJf+5oP/HLyqzUcd6yPmOiAe8QhR8jLdt/K8e14GI
        7XhAytKxI2qHqzUmi2T57lIzz83fG4Cmo59mIF4jLvHfjC48zz9dCoObCK/QcczX
        lipxmTm9HocDWCCo0L035arvWxRkP8ec75CE20Q8RqUY9jQo4a64RydbAabCw8s0
        b0mSoHbRvpZCx96KhCG7EkjCorWrvh9dxZAenIZDAbn3sX9QGc6A+B5MYbv70UKo
        8RD2IODsvuCSnn1rEQpGb0d6hNSReDN2cYLnSeuoMUlxT/SRCNBizGOWxJuFL1Cr
        5YnNyUv3tCEXKxEM9OoRHutydmeg8fTbTu8hAlGiYhgqehmkApS25qCl4sVz3FUj
        /y2yfQbecliu/YdPVziRGsLOTGhQldBSIaVdMGA/muzxVtOJdLBuK/qK/gvW7N2s
        vZQTHZz+B10Dlxs9S2Nhf7FX7pMLM9hXAgMBAAGjYzBhMB0GA1UdDgQWBBRjlTgl
        vyELpKyKeHYvMIHe2XLxtzAfBgNVHSMEGDAWgBRjlTglvyELpKyKeHYvMIHe2XLx
        tzAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjANBgkqhkiG9w0BAQsF
        AAOCAgEAcB4z4ALRX+s1Fb1j2sWLo65jIyxm0OB2RTlhstd4+zd+zFjLg7XE0O5j
        Ilm3basVlLM2mTmi5CC4mvOBibSb6NlJr34GmKbfwYVLj3tpnlnA/HGGzHY3uoX6
        zBUSIYRH10k2bmpM438fXtz9P+kHAkmsVj2Yk8uLg+tZDZEdM8qiWbaIZa+awHwL
        DBhd1dQ7ZyejVJLKGyYwd7dMYLq04F4AqawPp2ksmcUtktU2Q+uGmJBkqgBzUTC+
        64yPKBbPa2WFFDVtqt0r6qD2N7FD6v0b0PiBeruvhpSva1yvE0vMNfa9kc8ExrKz
        7GMMGsv3TIOqK0tYXJayoM+8VAELwBcFvkCkobs4TtkF3VoPiO91hlm7K+7woNQH
        OVhxqDqH3ECA7vNLeA09xT7EApXzPGwk163O4qoZdT7VUI2Fu9G0+IzzS42TVXOm
        MUp1sEidUUElwuuqDvKxsBP6do9xT8dHg2n9Y04ME2FyQ1omuLzRrcyjU6Qo6PLr
        H/di6KT3iiZ/leFkDMf5/Pesy7bExPZN2sHR3SpR5RwQh50T4KZx7FOqvCJpi6Pp
        H1cz0921qGtG0iheOzWfonmvYKnhxcTTpg+fuiVdPWwdutjVl+HPc2yjw1Gdqw4h
        n4oFjG4KQO6zvZzGDFay9HazZyUKpgamy24u8XY7/BSWc1c95Gg=
        -----END CERTIFICATE-----
      cert: |-
        -----BEGIN CERTIFICATE-----
        MIIGgDCCBGigAwIBAgICEAAwDQYJKoZIhvcNAQELBQAwgcAxCzAJBgNVBAYTAlVT
        MREwDwYDVQQIDAhWaXJnaW5pYTEkMCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9n
        eSBTdHVkaW9zMRQwEgYDVQQLDAtFbmdpbmVlcmluZzE2MDQGA1UEAwwtRGVjaXBo
        ZXIgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IChJbnRlcm1lZGlhdGUpMSowKAYJKoZI
        hvcNAQkBFhtlbmdpbmVlcmluZ0BkZWNpcGhlcm5vdy5jb20wHhcNMjAwMzE3MTgz
        NjMwWhcNMzAwMzE1MTgzNjMwWjCBhjETMBEGA1UEAwwKZ3JleW1hdHRlcjEUMBIG
        A1UECwwLRW5naW5lZXJpbmcxJDAiBgNVBAoMG0RlY2lwaGVyIFRlY2hub2xvZ3kg
        U3R1ZGlvczETMBEGA1UEBwwKQWxleGFuZHJpYTERMA8GA1UECAwIVmlyZ2luaWEx
        CzAJBgNVBAYTAlVTMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA+fFs
        KRyrVzkbDxLXcNJA/3B64VmQO+13XAQuXcFB4NgBvovzQb6jXo2i122UQQzhKiAk
        vTEpqciHhgH7P5IpUmYJESCMB569rybGV1hnpbeWT+XWnxm7ooUltvF+kDbKZ3d4
        Ig6L04u1uoLbAxNp4mx+0k1uz+Xyu2mBEIijBBX0/d93ESe4gwAqXsmQv8X0HaPp
        gNSoVcYaMLymUwpxwRCBP700U80Po+//UvEJEbwIQCONXSCRkszHPH4cFyHAtpAO
        XYYYdY8vtbVQcFWCeqvffu/vITvnsiv4e990zignIQAkaSPvveSykqnNtlljo8Lo
        geld2gcTWKqWf1EvgQIDAQABo4IBujCCAbYwCQYDVR0TBAIwADARBglghkgBhvhC
        AQEEBAMCBsAwMwYJYIZIAYb4QgENBCYWJE9wZW5TU0wgR2VuZXJhdGVkIFNlcnZl
        ciBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUsT+P7GOf2MqtL+pHOl3Q9C2fLH0wgfsG
        A1UdIwSB8zCB8IAUbA2I9pZUJ7Z6WxXfTRecoCsqfnWhgdOkgdAwgc0xCzAJBgNV
        BAYTAlVTMREwDwYDVQQIDAhWaXJnaW5pYTETMBEGA1UEBwwKQWxleGFuZHJpYTEk
        MCIGA1UECgwbRGVjaXBoZXIgVGVjaG5vbG9neSBTdHVkaW9zMRQwEgYDVQQLDAtF
        bmdpbmVlcmluZzEuMCwGA1UEAwwlRGVjaXBoZXIgQ2VydGlmaWNhdGUgQXV0aG9y
        aXR5IChSb290KTEqMCgGCSqGSIb3DQEJARYbZW5naW5lZXJpbmdAZGVjaXBoZXJu
        b3cuY29tggIQADAOBgNVHQ8BAf8EBAMCBaAwHQYDVR0lBBYwFAYIKwYBBQUHAwIG
        CCsGAQUFBwMBMBUGA1UdEQQOMAyCCmdyZXltYXR0ZXIwDQYJKoZIhvcNAQELBQAD
        ggIBACfLGfpi9hIQA+xN4D7AheoIyWTKZS16KrprDO4YPzhhE9a2WZGxJupgVZpa
        Z2sJukp6pnaXdf6Bo7rDcUq+rrx8gGhJ0TUr6Wl0ZdmvCrk1tQnhVkCcpPgxRJOP
        RzMt4OOxebthjsUEuXSNCsX3mvywt8fGbTrdRnncTufIRy3ZNFO6kS9gsvwfgBU5
        UUwJkBfOz2PB15TOYf2U+W9GmdBZAV5BnNEQn1xA7m6YEydRz4RU+AIlpP3dkaHi
        8RvyZon92Ux1RNlNXJCbGjlccjAN0TWrzi0e3s+ke2b897b6wQypb9WOrrEj1Nft
        aYY3Bwf6Zfz7Jk3UVC62uYxydBj6xGIv7+pbfW93i0GUqf8rHW6qiASbIiWS+/a/
        EUl+HXBRq5RgUDId3ipUYQG0mXJozGkzcP8r/xpEzWeVquyUqEtFzEybsTmrWjro
        dDzk4q2+QbR3Pndy7Ji6ysCypKS9jwM/A8BBQTuucLRBrFmvIpTKEGkGTtIFngwk
        /AgGL8SDkhd2owHCX7LyISlYr2f3E4XjVrtWdjIuHTvJzexrvwz2L+mb431N7rO2
        DMBLA8MXztlGS5JYhCIKaziu15r4CxtYegxQ6hhEaVP0/W9fsUvo3IOukOhWC1KO
        2n+U1NLp24Dm3fP4KGgHNtZCvfnA7w43aOaHPMCHBhJ7ESoC
        -----END CERTIFICATE-----
      key: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIEpAIBAAKCAQEA+fFsKRyrVzkbDxLXcNJA/3B64VmQO+13XAQuXcFB4NgBvovz
        Qb6jXo2i122UQQzhKiAkvTEpqciHhgH7P5IpUmYJESCMB569rybGV1hnpbeWT+XW
        nxm7ooUltvF+kDbKZ3d4Ig6L04u1uoLbAxNp4mx+0k1uz+Xyu2mBEIijBBX0/d93
        ESe4gwAqXsmQv8X0HaPpgNSoVcYaMLymUwpxwRCBP700U80Po+//UvEJEbwIQCON
        XSCRkszHPH4cFyHAtpAOXYYYdY8vtbVQcFWCeqvffu/vITvnsiv4e990zignIQAk
        aSPvveSykqnNtlljo8Logeld2gcTWKqWf1EvgQIDAQABAoIBAEXw08ZxWlTvCu5d
        5GGSxFN2gzw6Fs1eNu9N0De2E5w6dcp/WRPFp+uWkMHdzQWi+AMUuZMjhbgYACx0
        s3znhp6jJNhhFi4vsn6nyAq7F03dILe85iDhT4s73QDjdPogCuWHHdvR3DjXOIQ3
        h9fFf/S3TYnF10Nf4lulO1OIGK3UdYVo/Qorm165P5mhCJ8B+lVPkW50CFrGK3X0
        MhbYDeh3g1dwM95gxt7LrnLKb662ygBROXGEAE0ISHCApvw/lAhwe/w61BBdjIja
        Rz8Dm92aRBeAIvVNGkVfGdQLrX7Fs0AyFGP19QDa1B1bkj/fKQ/+mOfqrzD89QkF
        oq6z0ZECgYEA/6TbO/S2pOIEeWOD+ihO4TtFShpUwKLcS7NRmwDBEnqtZHEgrHJL
        YZ92+PNpHVJnP1OXRlxLeciM4LnUzYC67u0M3eW0pcg/ayln+NaRLzh8rs/vM8Yx
        loNeZS+H6sqGVSXnvc8BRm89TZrRi7AiEf/QIY7XHILjtRwERL6HyQUCgYEA+kqI
        mdKoXKxhGe3ujGMGivx5lOqo9k2TRP0mlkzFSuMWsBtEuO0DlOyxPFVUCpv+Wkt/
        AWC2d/9JcShJlMMs3tMt1gslvoPp5N9K+0++HXFA2lzHfgMjOf1hwDQLsMlyaf/S
        qnGe3zTxcvPpoPgq04QKxkzZdAgALSRrwAp8JU0CgYApFjDaGQGFzIGVlOXwPaw3
        zNPdDhBTCZnIXOCfveZJ9weJHhl3PcNZxExVxKE/QjAv4Fpux4Sl5RKnR5apFKh2
        oAiyXSnEf0OaEISSXMHmyfhYDDlQo+jyXNi+AH6iwLwIUVhGjE+TJ2u93kURY1SG
        egvUaOWvwmWghQk2lzyxlQKBgQC9DGEDNq8+WGF7cVDWLtG5VxwKU/hNGakb2c40
        hkYa202+tMoCl9s1uFXiiVzSKqNC1nVWuBL6rhNt6g0x1P3mTEH5wy++J+sZmWMM
        UV365RkkFiIEVyBbY7xarbUK0g2ebMFVRj7GvzmEJyGXGPtYCgsNXux8jLJ9Zl4Q
        jprYnQKBgQDN0gv6V37bwoX0GiQ/96qWxcBJEiCsxc9EYP8x9LOnIeZRDTozgjN0
        RK74+3zLN5+74qQQYfRZDKkTIWD3iD1o0LAn3+GrXgK3srQ8c16uTmxmwAUPS8lO
        /nhq1n+k2gddG2EMuDSfzFDG99vgJ84Ll6GaQmQDENZbWsGq9oGqkg==
        -----END RSA PRIVATE KEY-----