kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: {{ .Values.redis.name | default "redis" }}
  name: {{ .Values.redis.name | default "redis" }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.redis.replica_count  }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: {{ .Values.redis.name }}
      deployment: {{ .Values.redis.name }}
  strategy:
#    activeDeadlineSeconds: 21600
#    resources: {}
    rollingUpdate:
#      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
#      timeoutSeconds: 600
#      updatePeriodSeconds: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: {{ .Values.redis.name }}
        deployment: {{ .Values.redis.name }}
    spec:
      containers:
        - name: sidecar
          image: {{ tpl .Values.sidecar.image $ | quote }}
          imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
          env:
          {{- include "greymatter.envvars" . | indent 10 }}
          {{- if .Values.sidecar.resources }}
          - name: ENVOY_CONFIG
            value: |-
              DQphZG1pbjoNCiAgYWNjZXNzX2xvZ19wYXRoOiAiL2Rldi9zdGRvdXQiDQogIGFkZHJlc3M6DQogICAgc29ja2V0X2FkZHJlc3M6DQogICAgICBhZGRyZXNzOiAwLjAuMC4wDQogICAgICBwb3J0X3ZhbHVlOiA4MDAxDQoNCmR5bmFtaWNfcmVzb3VyY2VzOg0KICBhZHNfY29uZmlnOg0KICAgIGFwaV90eXBlOiBHUlBDDQogICAgZ3JwY19zZXJ2aWNlczoNCiAgICAgIGVudm95X2dycGM6DQogICAgICAgIGNsdXN0ZXJfbmFtZTogeGRzX2NsdXN0ZXINCiAgY2RzX2NvbmZpZzoNCiAgICBhZHM6IHt9DQogIGxkc19jb25maWc6DQogICAgYWRzOiB7fQ0KDQpub2RlOg0KICBjbHVzdGVyOiBqd3Qtc2VjdXJpdHkNCiAgaWQ6IGRlZmF1bHQNCiAgbG9jYWxpdHk6DQogICAgcmVnaW9uOiBkZWZhdWx0LXJlZ2lvbg0KDQpzdGF0aWNfcmVzb3VyY2VzOg0KICBsaXN0ZW5lcnM6DQogIC0gbmFtZTogcmVkaXN0bHNfbGlzdGVuZXINCiAgICBhZGRyZXNzOg0KICAgICAgc29ja2V0X2FkZHJlc3M6DQogICAgICAgIGFkZHJlc3M6IDAuMC4wLjANCiAgICAgICAgcG9ydF92YWx1ZTogMTQ0Mw0KICAgIGZpbHRlcl9jaGFpbnM6DQogICAgLSBmaWx0ZXJzOg0KICAgICAgLSBuYW1lOiBlbnZveS50Y3BfcHJveHkNCiAgICAgICAgY29uZmlnOg0KICAgICAgICAgIHN0YXRfcHJlZml4OiBpbmdyZXNzX3JlZGlzdGxzDQogICAgICAgICAgY2x1c3RlcjogcmVkaXN0bHNfY2x1c3Rlcg0KICAgICAgICAgIGFjY2Vzc19sb2c6DQogICAgICAgICAgICAtIG5hbWU6IGVudm95LmZpbGVfYWNjZXNzX2xvZw0KICAgICAgICAgICAgICBjb25maWc6DQogICAgICAgICAgICAgICAgcGF0aDogIi90bXAvcmVkaXN0bHNfY2x1c3Rlci5sb2ciDQogIGNsdXN0ZXJzOg0KICAtIG5hbWU6IHhkc19jbHVzdGVyDQogICAgY29ubmVjdF90aW1lb3V0OiAwLjI1cw0KICAgIHR5cGU6IFNUUklDVF9ETlMNCiAgICBsYl9wb2xpY3k6IFJPVU5EX1JPQklODQogICAgaHR0cDJfcHJvdG9jb2xfb3B0aW9uczoge30NCiAgICBsb2FkX2Fzc2lnbm1lbnQ6DQogICAgICBjbHVzdGVyX25hbWU6IHhkc19jbHVzdGVyDQogICAgICBlbmRwb2ludHM6DQogICAgICAtIGxiX2VuZHBvaW50czoNCiAgICAgICAgLSBlbmRwb2ludDoNCiAgICAgICAgICAgIGFkZHJlc3M6DQogICAgICAgICAgICAgIHNvY2tldF9hZGRyZXNzOg0KICAgICAgICAgICAgICAgIGFkZHJlc3M6IGNvbnRyb2wuZGVmYXVsdC5zdmMNCiAgICAgICAgICAgICAgICBwb3J0X3ZhbHVlOiA1MDAwMA0KICAtIG5hbWU6IHNwaXJlX2FnZW50DQogICAgY29ubmVjdF90aW1lb3V0OiAwLjI1cw0KICAgIGh0dHAyX3Byb3RvY29sX29wdGlvbnM6IHt9DQogICAgaG9zdHM6DQogICAgICAtIHBpcGU6DQogICAgICAgICAgcGF0aDogL3J1bi9zcGlyZS9zb2NrZXRzL2FnZW50LnNvY2sNCiAgLSBuYW1lOiByZWRpc3Rsc19jbHVzdGVyDQogICAgY29ubmVjdF90aW1lb3V0OiAxcw0KICAgIHR5cGU6IExPR0lDQUxfRE5TDQogICAgZG5zX2xvb2t1cF9mYW1pbHk6IFY0X09OTFkNCiAgICBsYl9wb2xpY3k6IFJPVU5EX1JPQklODQogICAgbG9hZF9hc3NpZ25tZW50Og0KICAgICAgY2x1c3Rlcl9uYW1lOiByZWRpc3Rsc19jbHVzdGVyDQogICAgICBlbmRwb2ludHM6DQogICAgICAtIGxiX2VuZHBvaW50czoNCiAgICAgICAgLSBlbmRwb2ludDoNCiAgICAgICAgICAgIGFkZHJlc3M6DQogICAgICAgICAgICAgIHNvY2tldF9hZGRyZXNzOg0KICAgICAgICAgICAgICAgIGFkZHJlc3M6IDEyNy4wLjAuMQ0KICAgICAgICAgICAgICAgIHBvcnRfdmFsdWU6IDYzNzkgDQoNCg==
          resources:
{{ toYaml .Values.sidecar.resources | indent 12 }}
          {{- end }}
          ports:
          - containerPort: 8080
            name: proxy
            protocol: TCP
          - containerPort: 1443
            name: proxy-redis
            protocol: TCP
          - containerPort: 8081
            name: metrics
            protocol: TCP
          {{- if .Values.global.spire.enabled }}
          volumeMounts:
          {{- include "sidecar_volume_mounts" . | indent 10 }}
          {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
          volumeMounts:
          {{- include "sidecar_volume_certs_mount" . | indent 10 }}
          {{- end }}
        - name: redis
          {{- if and .Values.global.environment (eq .Values.global.environment "openshift") }}
          image: {{ .Values.redis.openshift.image }}
          {{- else }}
          image: {{ .Values.redis.k8s.image }}
          command:
            - 'redis-server'
          args:
            - '--requirepass'
            - "$(REDIS_PASSWORD)"
          {{- end }}
          env:
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.redis.secret_name }}
                key: password
          imagePullPolicy: {{ .Values.redis.imagePullPolicy }}
        {{- if .Values.redis.resources }}
          resources:
{{ toYaml .Values.redis.resources | indent 12 }}
        {{- end }}
      {{- if .Values.redis.private_image }}
      imagePullSecrets:
      - name: docker.secret
      {{- end }}
      {{- if .Values.global.spire.enabled }}
      volumes:
      {{- include "sidecar_volumes" . | indent 6 }}
      {{- else if and (not .Values.global.spire.enabled) (.Values.global.mesh_tls.use_provided_certs) }}
      volumes:
      {{- include "sidecar_certs_volumes" . | indent 6 }}
      {{- end }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
#  test: false
#  triggers:
#    - type: ConfigChange
