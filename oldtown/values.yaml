# Default values for oldtown.
global:
  environment: kubernetes
  domain:
  route_url_name:
  remove_namespace_from_url: ''
  exhibitor:
    replicas: 1
  # XDS will be replaced with oldtown eventually
  xds:
    port: 18000
    cluster: greymatter
  oldtown:
    version: latest

oldtown:
  name: oldtown
  displayName: oldtown
  replicas: 1
  image: 'docker.production.deciphernow.com/deciphernow/oldtown:{{ $.Values.global.oldtown.version }}'
  imagePullPolicy: IfNotPresent
  initialConfigPath: 'config/oldtown_backend.json'
  containerPort: 5555
  zone: default-zone
  proxyPort: 8080
  init:
    envvars:
      greymatter_console_level:
          value: 'debug'
          type: 'value'
      greymatter_api_host:
          value: '{{ .Values.oldtown.name }}:{{ .Values.oldtown.containerPort }}'
          type: 'value'
      greymatter_api_key:
          value: 'xxx'
          type: 'value'
      greymatter_api_ssl:
          value: 'false'
          type: 'value'
  services:
    catalog:
      name: 'Grey Matter Catalog'
      serviceName: 'catalog'
      routes:
        - '/services/catalog/{{ $.Values.global.catalog.version }}'
        - '/services/catalog/{{ $.Values.global.catalog.version }}/'

    # control:
    #   name: 'Grey Matter Control'
    #   serviceName: 'control'
    #   routes:
        # - '/services/xds/{{ $.Values.global.xds.version }}'
        # - '/services/xds/{{ $.Values.global.xds.version }}'

    dashboard:
      name: 'Grey Matter Dashboard'
      serviceName: 'dashboard'
      routes:
        - '/services/dashboard/latest'
        - '/services/dashboard/latest/'

    data:
      name: 'Grey Matter Data'
      serviceName: 'data'
      routes:
        - '/services/data/{{ $.Values.global.data.version }}'
        - '/services/data/{{ $.Values.global.data.version }}/'

    jwt:
      name: 'Grey Matter JWT Security'
      serviceName: 'jwt'
      routes:
        - '/services/jwt-security/{{ $.Values.global.jwt.version }}'
        - '/services/jwt-security/{{ $.Values.global.jwt.version }}/'

    edge:
      name: 'Grey Matter Edge'
      serviceName: 'edge'
      routes:
        - '/' #/services/edge/{{ $.Values.global.edge.version }}
        # - '/' #/services/edge/{{ $.Values.global.edge.version }}
    # TODO: multiple routes

    slo:
      name: 'Grey Matter Service Level Objectives'
      serviceName: 'slo'
      routes:
        - '/services/slo/{{ $.Values.global.slo.version }}'
        - '/services/slo/{{ $.Values.global.slo.version }}/'

    documentation:
      name: 'Grey Matter Documentation'
      serviceName: 'documentation'
      routes:
        - '/services/documentation/{{ $.Values.global.documentation.version }}'
        - '/services/documentation/{{ $.Values.global.documentation.version }}/'

  envvars:
    oldtown_log_level:
      type: 'value'
      value: 'debug'
    oldtown_address:
      type: 'value'
      value: '0.0.0.0:5555'
    oldtown_org_key:
      type: 'value'
      value: 'deciphernow'
    oldtown_persister_type:
      type: 'value'
      value: 'file'
    oldtown_persister_path:
      type: 'value'
      value: '/control-plane/oldtown_backend.json'
  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
